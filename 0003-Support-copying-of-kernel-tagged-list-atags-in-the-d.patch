From 51b572948382d3ae5bc1a85b7247d0a4e9990952 Mon Sep 17 00:00:00 2001
From: Mike Kasick <mike@kasick.org>
Date: Wed, 26 Jun 2013 21:45:39 +0200
Subject: [PATCH 3/6] Support copying of kernel tagged list (atags) in the
 decompressor.

This is needed to hardboot kexec a kernel with a new tags list (including a
new kernel command line), since the new atags would otherwise be lost with
the limited kernel memory mapping.  Without this patch, a hardboot-kexec'd
kernel uses the atags provided by the bootloader.
---
 arch/arm/boot/compressed/Makefile |  3 +++
 arch/arm/boot/compressed/head.S   | 42 ++++++++++++++++++++++++++++++++++++---
 arch/arm/boot/compressed/misc.c   | 25 +++++++++++++++++++++++
 arch/arm/mach-msm/Makefile.boot   |  2 +-
 4 files changed, 68 insertions(+), 4 deletions(-)

diff --git a/arch/arm/boot/compressed/Makefile b/arch/arm/boot/compressed/Makefile
index bb26756..b3f5924 100644
--- a/arch/arm/boot/compressed/Makefile
+++ b/arch/arm/boot/compressed/Makefile
@@ -139,6 +139,9 @@ endif
 ifeq ($(CONFIG_CPU_ENDIAN_BE8),y)
 LDFLAGS_vmlinux += --be8
 endif
+ifneq ($(PARAMS_PHYS),)
+LDFLAGS_vmlinux += --defsym params_phys=$(PARAMS_PHYS)
+endif
 # ?
 LDFLAGS_vmlinux += -p
 # Report unresolved symbol references
diff --git a/arch/arm/boot/compressed/head.S b/arch/arm/boot/compressed/head.S
index 4f16023..60d3169 100644
--- a/arch/arm/boot/compressed/head.S
+++ b/arch/arm/boot/compressed/head.S
@@ -134,8 +134,9 @@ start:
 		.word	_edata			@ zImage end address
  THUMB(		.thumb			)
 1:		mov	r7, r1			@ save architecture ID
-		mov	r8, r2			@ save atags pointer
-
+		teq  r0, #0      @ Check for kexec_boot_atags.
+		movne  r8, r0      @ Save kexec_boot_tags.
+		moveq  r8, r2      @ save atags pointer
 #ifndef __ARM_ARCH_2__
 		/*
 		 * Booting from Angel - need to enter SVC mode and disable
@@ -457,6 +458,41 @@ not_relocated:	mov	r0, #0
 		add	r2, sp, #0x10000	@ 64k max
 		mov	r3, r7
 		bl	decompress_kernel
+
+/* Copy the kernel tagged list (atags):
+ *
+ * The kernel requires atags to be located in a direct-mapped region,
+ * usually below the kernel in the first 16 kB of RAM.  If they're above
+ * (the start of) the kernel, they need to be copied to a suitable
+ * location, e.g., the machine-defined params_phys.
+ *
+ * Still need to make sure that the copied tags don't overwrite either the
+ * kernel or decompressor code (or rather, the remainder of it since
+ * everything up to here has already been executed).
+ *
+ * r4: zreladdr (kernel start)
+ * r8: atags */
+
+		/* Don't need to copy atags if they're already below the kernel. */
+		cmp  r8, r4
+		blo  call_kernel
+
+		/* r1: min(zreladdr, pc) */
+		mov  r1, pc
+		cmp  r4, r1
+		movlo  r1, r4
+
+		/* Compute max space for atags, if max <= 0 don't copy. */
+		ldr  r0, =params_phys  @ dest
+		subs  r2, r1, r0    @ max = min(zreladdr, pc) - dest
+		bls  call_kernel
+
+		/* Copy atags to params_phys. */
+		mov  r1, r8      @ src
+		bl  copy_atags
+		mov  r8, r0
+
+call_kernel:
 		bl	cache_clean_flush
 		bl	cache_off
 		mov	r0, #0			@ must be zero
@@ -464,7 +500,7 @@ not_relocated:	mov	r0, #0
 		mov	r2, r8			@ restore atags pointer
  ARM(		mov	pc, r4	)		@ call kernel
  THUMB(		bx	r4	)		@ entry point is always ARM
-
+		.ltorg
 		.align	2
 		.type	LC0, #object
 LC0:		.word	LC0			@ r1
diff --git a/arch/arm/boot/compressed/misc.c b/arch/arm/boot/compressed/misc.c
index 8e2a8fc..84e97f1 100644
--- a/arch/arm/boot/compressed/misc.c
+++ b/arch/arm/boot/compressed/misc.c
@@ -21,6 +21,8 @@ unsigned int __machine_arch_type;
 #include <linux/compiler.h>	/* for inline */
 #include <linux/types.h>
 #include <linux/linkage.h>
+#include <asm/setup.h>
+#include <asm/string.h>
 
 static void putstr(const char *ptr);
 extern void error(char *x);
@@ -152,3 +154,26 @@ decompress_kernel(unsigned long output_start, unsigned long free_mem_ptr_p,
 	else
 		putstr(" done, booting the kernel.\n");
 }
+
+
+const struct tag *copy_atags(struct tag *dest, const struct tag *src,
+                             size_t max)
+{
+	struct tag *tag;
+	size_t      size;
+
+	/* Find the last tag (ATAG_NONE). */
+	for_each_tag(tag, (struct tag *)src)
+		continue;
+
+	/* Include the last tag in copy. */
+	size = (char *)tag - (char *)src + sizeof(struct tag_header);
+
+	/* If there's not enough room, just use original and hope it works. */
+	if (size > max)
+		return src;
+
+	memcpy(dest, src, size);
+
+	return dest;
+}
\ No newline at end of file
diff --git a/arch/arm/mach-msm/Makefile.boot b/arch/arm/mach-msm/Makefile.boot
index 437933e..4aa1c00 100644
--- a/arch/arm/mach-msm/Makefile.boot
+++ b/arch/arm/mach-msm/Makefile.boot
@@ -44,7 +44,7 @@ endif
 
 # APQ8064
    zreladdr-$(CONFIG_ARCH_APQ8064)	:= 0x80208000
-
+   params_phys-$(CONFIG_ARCH_APQ8064)  := 0x80200100
 # MSM8974
    zreladdr-$(CONFIG_ARCH_MSM8974)	:= 0x00008000
 
-- 
1.9.1

